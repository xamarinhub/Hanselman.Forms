@using System.Web
@inject IJSRuntime _jsRuntime
@inject NavigationManager manager
@inject HttpClient _httpClient
@inject AuthStateProvider _easyAuthAuthenticationStateProvider
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Hanselman.Admin</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <AuthorizeView>
            <Authorizing>
                <NavLink class="nav-link" href="">
                    <span class="oi oi-timer" aria-hidden="true"></span> Authenticating
                </NavLink>
            </Authorizing>
            <NotAuthorized>
                <NavLink class="nav-link" href="" @onclick="@LoginWithTwitter">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Sign In
                </NavLink>
            </NotAuthorized>
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="featured">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Featured Items
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="" @onclick="@Logout">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Sign Out
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    void LoginWithTwitter()
    {
        //We are redirecting away from the app here so any state will be lost
        manager.NavigateTo(Constants.AzureFunctionAuthURL +
            Constants.TwitterEndpoint +
            Constants.PostloginRedirect +
            HttpUtility.UrlEncode(Constants.BlazorWebsiteURL) +
            Constants.LoginMode);
    }
    async void Logout()
    {
        await _easyAuthAuthenticationStateProvider.Logout();
    }
}
